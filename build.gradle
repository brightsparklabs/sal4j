/*
 * Created by brightSPARK Labs
 * www.brightsparklabs.com
 */

// -----------------------------------------------------------------------------
// PLUGINS
// -----------------------------------------------------------------------------

plugins {
    // Apply the brightSPARK Labs plugin for standardisation.
    id 'com.brightsparklabs.gradle.baseline' version '4.9.0'

    // Apply the java-library plugin to add support for Java Library.
    id 'java-library'

    // Apply the groovy plugin to also add support for Groovy (needed for Spock).
    id 'groovy'

    // -----------------------------------------------------------------------------
    // PUBLISHING
    // -----------------------------------------------------------------------------

    id 'maven-publish'
    // Maven Central requires artifacts to be signed.
    id 'signing'
    // Maven Central requires artifacts to be released via Sonatype Nexus.
    id 'io.github.gradle-nexus.publish-plugin' version '2.0.0'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

// -----------------------------------------------------------------------------
// PROJECT IDENTIFICATION
// -----------------------------------------------------------------------------

project.description  = 'Simple Audit Logging for Java'
project.ext.url      = 'https://github.com/brightsparklabs/sal4j'
project.ext.scm      = 'scm:git@github.com:brightsparklabs/sal4j.git'
project.group        = 'com.brightsparklabs'
project.version      = 'git describe --always --dirty'.execute().text.trim()

// -----------------------------------------------------------------------------
// REPOSITORIES/DEPENDENCIES
// -----------------------------------------------------------------------------

repositories {
    // Use mavenCentral for resolving your dependencies.
    mavenCentral()
}

dependencies {
    def versions = [
        immutables: '2.10.1',
    ]

    // These dependencies are found on compile classpath of this component and consumers.
    implementation(
            // General
            'org.slf4j:slf4j-api:2.0.16',
            'net.logstash.logback:logstash-logback-encoder:8.1'
            )

    compileOnly(
            "org.immutables:value-annotations:${versions.immutables}"
            )

    annotationProcessor(
            "org.immutables:value:${versions.immutables}"
            )

    testImplementation(
            // Use the awesome Spock testing and specification framework even with Java
            'org.apache.groovy:groovy-all:4.0.25',
            'org.spockframework:spock-core:2.4-M6-groovy-4.0',
            'junit:junit:4.13.2',

            // So that we can suppress some spotbugs reports
            'com.github.spotbugs:spotbugs-annotations:4.9.3',

            // Logger implementation.
            'ch.qos.logback:logback-classic:1.5.18'
            )
}

// -----------------------------------------------------------------------------
// SETUP ARTIFACTS FOR PUBLISHING
// -----------------------------------------------------------------------------

// Maven Central requires javadoc and sources.
java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.name
            version project.version
            from components.java

            // Maven Central requires specific POM attributes.
            pom {
                name = project.name
                description = project.description
                url = project.url

                scm {
                    connection = project.scm
                    developerConnection = project.scm
                    url = project.scm
                }

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }

                developers {
                    developer {
                        id = 'brightsparklabs'
                        name = 'brightSPARK Labs'
                        email = 'enquire@brightsparklabs.com'
                    }
                }
            }
        }
    }
}

// Maven Central requires signed artifacts.
signing {
    def signingKey = findProperty('signingKey')
    def signingPassword = findProperty('signingPassword')
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava

    // Only require signing when publishing (otherwise normal builds would need GPG keys).
    required { gradle.taskGraph.hasTask('publishToSonatype') }
}

// -----------------------------------------------------------------------------
// PUBLISH ARTIFACTS (via nexus)
// -----------------------------------------------------------------------------

nexusPublishing {
    repositories {
        // Credentials default to:
        // - Property `sonatypeUsername` or ENV variable `ORG_GRADLE_PROJECT_sonatypeUsername`.
        // - Property `sonatypePassword` or ENV variable ORG_GRADLE_PROJECT_sonatypePassword`.
        sonatype()
    }
}


task prePublishToMavenCentral {
    group 'brightSPARK Labs - Maven Central Publishing'
    description 'Stages the release on Sonatype ready for publishing to Maven Central.'
    dependsOn 'publishToSonatype', 'closeSonatypeStagingRepository'
}
task publishToMavenCentral {
    group 'brightSPARK Labs - Maven Central Publishing'
    description 'Publishes the release to Maven Central.'
    dependsOn 'publishToSonatype', 'closeAndReleaseSonatypeStagingRepository'
}
